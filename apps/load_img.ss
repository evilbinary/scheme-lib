
;;(imgui-set-next-window-size (imgui-make-vec2 200.0 180.0) 0)
;;(imgui-begin "image" 0)
;;(let ((size (imgui-pvec2 128.0 128.0))
;;      (uv0 (imgui-pvec2 0.0 0.0))
;;      (uv1 (imgui-pvec2 1.0 1.0))
;;      )
;;  (imgui-image texture-id size uv0 uv1)
;;  (test-texture "./text.png" size uv0 uv1)
;;  (imgui-pvec2 uv0)
;;  (imgui-pvec2 uv1)
;;  (imgui-pvec2 size)
;;  )
;;(imgui-end)

(import  (glut) (utils libutil))
(import (imgui))

(define (imgui-test1)
  (glut-reshape (lambda(w h)
                    (imgui-resize w h)
                     ))
  (glut-touch-event (lambda (type x y)
          (imgui-touch-event type x y)))
  (glut-mouse-event (lambda (button state)
        ;(glut-log "mouse-event")
          (imgui-mouse-event button state)))
  (glut-motion-event (lambda (x y)
        ;(glut-log "motion-event")
        (imgui-motion-event x y)
    ))
  (glut-key-event (lambda (event)
      (glut-log (format "event===>~a"   event ) )
       (imgui-key-event
          (glut-event-get event 'type)
          (glut-event-get event 'keycode)
          (glut-event-get event 'char)
          (glut-event-get event 'chars))
       ; (if (= 4 (glut-event-get event 'keycode ))
       ;   (begin (imgui-exit)
       ;   (glut-exit)))
      ))
  (glut-init)
  (imgui-init)
  (let ((texture-id (imgui-load-texture "./number.png")))

      (glut-display (lambda ()
              ;(imgui-test3)
              (imgui-render-start)
              ;(imgui-test)
              (imgui-set-next-window-size (imgui-make-vec2 100.0 10.0) 0)
              (imgui-begin "evilbinary" 0)
              (imgui-text "hello,world!")
              (imgui-end)
              ;loadimage
              ;(glut-log (format "texture-id=~a" texture-id))
              (imgui-set-next-window-size (imgui-make-vec2 1000.0 1000.0) 0)
              (imgui-begin "image" 0)
              (let ((size (imgui-pvec2 1000.0 1000.0))
                    (uv0 (imgui-pvec2 0.0 0.0))
                    (uv1 (imgui-pvec2 1.0 1.0)) 
                  )
                (imgui-image texture-id  size uv0 uv1 )

                ;(test-texture "./number.png" size uv0 uv1)
                (imgui-uvec2 uv0)
                (imgui-uvec2 uv1)
                (imgui-uvec2 size)
              )
              (imgui-end)

              (imgui-render-end)
          ))

    (glut-main-loop))
)
(imgui-test1)
